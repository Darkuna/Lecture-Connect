<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3c.org/1999/xhtml" xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html" xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/templates/main.xhtml">
    <ui:define name="content">
        <h:outputStylesheet name="css/main.css"/>
        <p:growl id="growl" showDetail="true"/>

        <h:form id="form">

            <h1 class="title ui-widget-header ui-corner-all">MEMORI</h1>

            <div class="toggle" style="margin-left: 5%; margin-bottom: 30px">
                <div class="brake toggle">
                    <p:commandButton action='#{deckController.createDeck()}' icon="pi pi-plus"
                                     update=":form:createDeckDialog" oncomplete="PF('createDeckDialog').show()"
                                     value="New Deck"
                                     styleClass="ui-button-raised ui-button-secondary">
                    </p:commandButton>
                </div>

                <div class="brake toggle">
                    <p:toggleSwitch value="#{showDecksBean.togglePublicDecks}">
                        <p:ajax update="deckList switch-text"/>
                    </p:toggleSwitch>
                    <p:outputLabel id="switch-text" class="toggle-text">#{showDecksBean.togglePublicDecks ? "Public" :
                            "Private"} decks shown</p:outputLabel>
                </div>
            </div>

            <p:carousel value="#{showDecksBean.decks}" var="deck" circular="true" numScroll="1"
                        numVisible="#{showDecksBean.togglePublicDecks ?
                        showDecksBean.numberOfPublicDecksShown : showDecksBean.numberOfPrivateDecksShown}"
                        id="deckList">
                <p:divider id="cardList" class="boxSize">

                    <div class="col">
                        <em class="pi pi-calendar" style="font-size: 3rem"/>
                    </div>

                    <div class="col">
                        <h:outputText value="#{deck.name}"/>
                    </div>

                    <div class="col">
                        <h:outputText value="#{deck.description}"/>
                    </div>
                    <div style="width: auto; display: block;">
                        <p:commandButton id="close" action="#{cardPopupBean.hidePopUp()}" icon="pi pi-times"
                                         styleClass="rounded-button ui-button-danger ui-button" update="close cardList"
                                         rendered="#{cardPopupBean.showPopup}">
                        </p:commandButton>

                        <p:carousel id="cardPopup" value="#{cardPopupBean.cards}" var="card" circular="true"
                                    style="width: auto;" numVisible="1" numScroll="1" autoplayInterval="3000"
                                    rendered="#{cardPopupBean.showPopup}">
                            <div class="popupBox">

                                <div class="col">
                                    <h:outputText value="Frage: "/>
                                </div>

                                <div>
                                    <h:outputText value="#{card.front}"/>
                                </div>
                            </div>
                        </p:carousel>

                    </div>
                    <div class="btn-bot">
                        <div class="tooltip">
                            <p:commandButton id="adminLock" rendered="#{sessionInfoBean.hasRole('ADMIN')}"
                                             action="#{reportDeckController.deactivateDeck(deck)}" icon="pi pi-lock"
                                             update="form"
                                             styleClass="rounded-button ui-button-danger ui-button">
                                <span class="tooltiptext">lock deck</span>
                                <f:setPropertyActionListener value="#{deck}" target="#{sessionInfoBean.deck}"/>
                                <p:confirm type="popup" header="Confirmation"
                                           message="Are you sure you want deactivate this deck?"
                                           icon="pi pi-exclamation-triangle"/>
                            </p:commandButton>
                        </div>
                        <div class="tooltip">
                            <p:commandButton id="privateDelete" action="#{deckController.deleteDeck(deck)}"
                                             icon="pi pi-trash" styleClass="rounded-button ui-button-danger ui-button"
                                             update=":form:deckList" rendered="#{!showDecksBean.togglePublicDecks}">
                                <span class="tooltiptext">delete deck</span>
                                <p:confirm type="popup" header="Confirmation" message="Do you want to delete this deck?"
                                           icon="pi pi-info-circle"/>
                            </p:commandButton>
                        </div>
                        <div class="tooltip">
                            <p:commandButton id="privateEdit" action='#{deckController.editDeck(deck)}'
                                             icon="pi pi-pencil"
                                             styleClass="rounded-button ui-button-secondary ui-button"
                                             rendered="#{!showDecksBean.togglePublicDecks}">
                                <span class="tooltiptext">edit deck</span>
                            </p:commandButton>
                        </div>
                        <div class="tooltip">
                            <p:commandButton icon="pi pi-search"
                                             styleClass="rounded-button ui-button-secondary ui-button"
                                             style="background: #ADA13B; border: #495057" update="cardList">
                                <span class="tooltiptext">preview</span>
                                <f:setPropertyActionListener value="#{deck}" target="#{cardPopupBean.deck}"/>
                            </p:commandButton>
                        </div>
                        <div class="tooltip">
                            <p:commandButton id="copy" action="#{bookmarksController.bookmarkDeck(deck)}" update="growl"
                                             icon="pi pi-plus" styleClass="rounded-button ui-button-secondary ui-button"
                                             style="background: #4c9fad; border: #495057">
                                <span class="tooltiptext">copy deck</span>
                            </p:commandButton>
                        </div>
                    </div>
                </p:divider>
            </p:carousel>


            <p:dialog header="Create Deck" id="createDeckDialog" widgetVar="createDeckDialog" modal="true"
                      showEffect="fade" hideEffect="fade" resizable="false">
                <p:outputPanel id="deckData" rendered="#{not empty deckController.deck}">
                    <p:inputText id="deckName" value="#{deckController.deck.name}" placeholder="Name"/>
                    <br/>
                    <p:inputText id="deckDescription" value="#{deckController.deck.description}"
                                 placeholder="Description"/>

                    <p:separator/>
                    <h:panelGrid columns="2">
                        <p:outputLabel for="publicDeck" value="Public: "/>
                        <p:selectBooleanCheckbox id="publicDeck" value="#{deckController.deck['public']}"/>
                    </h:panelGrid>
                    <p:separator/>
                    <h:panelGrid columns="3">
                        <p:commandButton value="Close" onclick="PF('createDeckDialog').hide()"/>
                        <p:commandButton value="Save" action="#{deckController.doSaveDeck()}"
                                         update=":form:deckList growl"/>
                        <p:commandButton value="Save &amp; Edit" action="#{deckController.doSaveAndEditDeck()}"
                                         update="growl"/>
                    </h:panelGrid>
                </p:outputPanel>
            </p:dialog>
        </h:form>

        <p:confirmPopup global="true">
            <p:commandButton value="No" type="button" styleClass="ui-confirm-popup-no ui-button-flat"/>
            <p:commandButton value="Yes" type="button" styleClass="ui-confirm-popup-yes"/>
        </p:confirmPopup>
    </ui:define>
</ui:composition>